on: 
  schedule: 
    - cron: '0 0 * * 0'
  workflow_dispatch:


jobs:
  scrape:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      -
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Setup Python
        uses: actions/setup-python@v2
        with:
          cache: 'pip'
      -
        name: Install build dependencies
        run: pip install -r requirements.txt
      -
        name: Scraping SEP and Baseband firmwares
        run: python main.py
      -
        name: Making archives for firmwares
        run: |
          # Delete empty directories
          find output -type d -empty -delete

          # Find and zip leaf directories
          find output -type d -not -empty -exec sh -c '(ls -p "{}"|grep />/dev/null)|| (cd "{}"; zip -rm9 $(basename "{}").zip *)' \;

          # Rename them
          for file in output/**/*.zip; do
            mv $file $(echo $file | awk 'BEGIN { FS="/" }; {printf "%s/%s/%s_%s_%s.zip", $1, $2, $3, $4, $2}')
          done

          # Delete empty directories (again)
          find output -type d -empty -delete
      - 
        name: Creating GitHub releases for each firmware
        run: |
          for dir in output/*; do
            BUILDID=$(basename $dir | awk 'BEGIN { FS="_" }; {print $NF}')
            VERSION="$(basename $dir | awk 'BEGIN { FS="_" }; {print $1}' | sed 's/-/ /g')"

            if git ls-remote --exit-code --tags "https://github.com/$GITHUB_REPOSITORY" $BUILDID >/dev/null; then
              assets=()
              for asset in $dir/*; do
                assets+=("-a" "$asset")
              done
              hub release create "${assets[@]}" -m "$VERSION" $BUILDID 
            fi
          done
